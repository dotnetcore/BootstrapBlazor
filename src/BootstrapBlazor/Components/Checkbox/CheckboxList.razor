@namespace BootstrapBlazor.Components
@typeparam TValue
@inherits ValidateBase<TValue>

@if (IsShowLabel)
{
    <BootstrapLabel required="@Required" for="@Id" ShowLabelTooltip="ShowLabelTooltip" Value="@DisplayText" />
}

@if (IsButton)
{
    <div @attributes="@AdditionalAttributes" id="@Id" class="@ButtonClassString" role="group">
        @foreach (var item in Items)
        {
            var id = GetIdByItem(item);
            <input type="checkbox" class="btn-check" id="@id" autocomplete="off">
            <label class="@GetButtonItemClassString(item)" for="@id" @onclick="() => OnClick(item)">
                @item.Text
            </label>
        }
    </div>
}
else
{
    <div @attributes="@AdditionalAttributes" id="@Id" class="@ClassString" tabindex="0" hidefocus="true">
        @foreach (var item in Items)
        {
            <div @key="item" class="@CheckboxItemClassString">
                <Checkbox TValue="bool" IsDisabled="GetDisabledState(item)"
                          ShowAfterLabel="true" ShowLabel="false" ShowLabelTooltip="ShowLabelTooltip"
                          DisplayText="@item.Text" OnBeforeStateChanged="_onBeforeStateChangedCallback"
                          Value="@item.Active" OnStateChanged="@((state, v) => OnStateChanged(item, v))"
                          ChildContent="GetChildContent(item)"></Checkbox>
            </div>
        }
    </div>
}
